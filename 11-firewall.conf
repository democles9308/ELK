# 11-firewall.conf
filter {
  if "pf" in [tags] and [syslog_program] =~ /^filterlog$/ {
    grok {
      add_tag => [ "firewall" ]
      patterns_dir => ["/etc/logstash/patterns"]
      match => [ "syslog_message", "%{PF_LOG_DATA}%{PF_IP_SPECIFIC_DATA}%{PF_IP_DATA}%{PF_PROTOCOL_DATA}?",
                 "syslog_message", "%{PF_IPv4_SPECIFIC_DATA}%{PF_IP_DATA}%{PF_PROTOCOL_DATA}?",
                 "syslog_message", "%{PF_IPv6_SPECIFIC_DATA}%{PF_IP_DATA}%{PF_PROTOCOL_DATA}?"]
    }
    # Change interface as desired
      if [interface] =~ /^igb0$/ {
        mutate {
          add_tag => [ "LAN" ]
      }
    }
     # Change interface as desired
      if [interface] =~ /^igb1$/ {
        mutate {
          add_tag => [ "WAN" ]
      }
    }
    # Change interface as desired
      if [interface] =~ /^igb2$/ {
        mutate {
          add_tag => [ "DMZ2" ]
      }
    }
    # Change interface as desired
      if [interface] =~ /^igb3$/ {
        mutate {
          add_tag => [ "DMZ" ]
      }
    }
    if [source][ip] {
      # Check if source.ip address is private.
      cidr {
        address => [ "%{[source][ip]}" ]
        network => [ "0.0.0.0/32", "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16", "fc00::/7", "127.0.0.0/8", "::1/128", "169.254.0.0/16", "fe80::/10", "224.0.0.0/4", "ff00::/8", "255.255.255.255/32", "::" ]
        add_field => { "[src_locality]" => "private" }
      }
      if ![src_locality] {
        geoip {
          add_tag => [ "GeoIP" ]
          source => "[source][ip]"
          database => "/usr/share/GeoIP/GeoLite2-City.mmdb"
          target => "[source][geo]"
        }
        geoip {
         default_database_type => 'ASN'
         database => "/usr/share/GeoIP/GeoLite2-ASN.mmdb"
         #cache_size => 5000
         source => "[source][ip]"
         target => "[source][as]"
       }
       mutate {
         rename => { "[source][as][asn]" => "[source][as][number]"}
         rename => { "[source][as][as_org]" => "[source][as][organization][name]"}
       }
      }
    }
    if [destination][ip] {
      # Check if destination.ip address is private.
      cidr {
        address => [ "%{[destination][ip]}" ]
        network => [ "0.0.0.0/32", "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16", "fc00::/7", "127.0.0.0/8", "::1/128", "169.254.0.0/16", "fe80::/10", "224.0.0.0/4", "ff00::/8", "255.255.255.255/32", "::" ]
        add_field => { "[dest_locality]" => "private" }
      }
      if ![dest_locality] {
        geoip {
          add_tag => [ "GeoIP" ]
          source => "[destination][ip]"
          database => "/usr/share/GeoIP/GeoLite2-City.mmdb"
          target => "[destination][geo]"
        }
        geoip {
         default_database_type => 'ASN'
         database => "/usr/share/GeoIP/GeoLite2-ASN.mmdb"
         #cache_size => 5000
         source => "[destination][ip]"
         target => "[destination][as]"
       }
       mutate {
         rename => { "[destination][as][asn]" => "[destination][as][number]"}
         rename => { "[destination][as][as_org]" => "[destination][as][organization][name]"}
       }
      }
    }
    mutate {
      add_field => { "[event][dataset]" => "firewall"}
      update => { "[network][direction]" => "%{[network][direction]}bound" }
      update => { "[network][type]" => "ipv%{[network][type]}" }
    }
  }
}
